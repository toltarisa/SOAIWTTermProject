
@{
    ViewData["Title"] = "Index";
}
@model MapViewModel
<link href="https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css" rel="stylesheet">

<div class="container-fluid">
    <div class="wrapper">
        <div class="sidebar">
            <div class="sidebar-top">
                <h4>Explore The London</h4>
            </div>
            <div class="sidebar-body">
                <h5>
                    <span><img style="width: 30px; margin-right:10px;" src="/img/location.svg" /></span>Find
                    nearby
                </h5>
                <input type="text" placeholder="Enter adress,city or coord" id="searchKey" />
                <button class="next-btn">Next</button>
                <div class="results"></div>
            </div>
        </div>
        <div class="map" id="map">
        </div>
    </div>
</div>
<!--map Component-->
<script src="./js/jquery/jquery.min.js"></script>
<script src="https://api-maps.yandex.ru/2.1/?apikey=b4373fc9-c8eb-4a44-91bb-cae4ba0c5f9e&lang=en_US"
        type="text/javascript"></script>
<script src="https://yastatic.net/s3/mapsapi-jslibs/area/0.0.1/util.calculateArea.min.js"
        type="text/javascript"></script>
@*<script src='./js/bootstrap/bootstrap.min.js'></script>*@
<script src="./js/index.js"></script>
<script type="text/javascript">


    $(document).ready(function () {
        ymaps.ready(init);

        function getLocate(locations) {
            myMap.geoObjects.add(new ymaps.Placemark(locations));
        }

        function init() {
            var coords = [];
            var myMap = new ymaps.Map("map", {
                center: [51.52026933, -0.095],
                zoom: 10
            });
            searchKey = window.location.search.substring(1).split("=")[1]
            if (searchKey !== undefined) {
                $('#searchKey').val(searchKey)
                var myGeocoder = ymaps.geocode(searchKey, {
                    boundedBy: myMap.getBounds(),// [[50.259998, -5.269000],[54.906101, -1.080278 ]],
                    strictBounds: true,
                });
                myGeocoder.then(function (res) {
                    locationCount = res.metaData.geocoder.results;
                    for (let i = 0; i < locationCount; i++) {
                        var name = res.geoObjects.get(i).properties.get('name') + " - " + res.geoObjects.get(i).properties.get('description');
                        $(".results").append(
                            '<div class="result-list">' +
                            ' <div class="result-list-numbering">' + (i + 1) + '.</div>' +
                            ' <div class="result-list-text">' +
                            '        <div class="result-list-link">' + name + '</div>' +
                            ' </div>' +
                            ' <div class="result-list-icon" ><a class="locate"><i class="icon ion-md-locate" data-location="' + res.geoObjects.get(i).geometry.getCoordinates() + '"></i></a></div>' +
                            '<div>'
                        );
                        myMap.geoObjects.add(new ymaps.Placemark(res.geoObjects.get(i).geometry.getCoordinates()))
                    }

                })
            }

            $('.results').click(function (e) {
                if (e.target.localName === "i") {
                    console.log(e.target.dataset.location.split(','))
                    myMap.setCenter(e.target.dataset.location.split(','));
                    myMap.setZoom(15, { duration: 1000 });
                }
            })
            $('.next-btn').click(function (e) {
                window.location.href = "LondonMaps?s=" + $('#searchKey').val();
            })

            $.ajax({
                type: "POST",
                url: '/LondonMaps/',
                dataType: 'json',
                success: function (data) {
                    for (let i = 0; i < data.locations.length; i++) {
                        myMap.geoObjects.add(new ymaps.Polygon([JSON.parse(data.locations[i])],
                            {
                                hintContent: data.lad[i]
                            },
                            {
                                fillColor: '#00FF0088',
                                strokeWidth: 1,
                                region: data.lad[i]
                            }))
                        console.log(data.locations[i]);
                    }

                },
                error: function (err) {
                    console.log(err);
                }
            });

            myMap.geoObjects.events.add('click', function (e) {
                // Getting a reference to the child object where the event occurred.
                var object = e.get('target');
                console.log(object)

                alert(object.options._options.region);
            });
        }
    })

</script>
